{"remainingRequest":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dlinh/Documents/hr-management/src/components/Pagination/Pagination.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dlinh/Documents/hr-management/src/components/Pagination/Pagination.vue","mtime":1624240131087},{"path":"/home/dlinh/Documents/hr-management/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2luYXRpb24gewogIEBhcHBseSBsaXN0LW5vbmU7Cn0KCi5wYWdpbmF0aW9uLWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7CiAgbWFyZ2luLXJpZ2h0OiAwLjU1cmVtOwogIEBhcHBseSBpbmxpbmUtYmxvY2s7Cn0KCi5wYWdpbmF0aW9uLWl0ZW0gYnV0dG9uIHsKICBAYXBwbHkgcHgtMyBweS0yIHJvdW5kZWQgdGV4dC1ibGFjazsKfQoKLnBhZ2luYXRpb24taXRlbSBidXR0b246Zm9jdXMgewogIEBhcHBseSBvdXRsaW5lLW5vbmUgYm9yZGVyLW5vbmU7Cn0KCi5hY3RpdmUgewogIEBhcHBseSBiZy1ncmF5LTQwMCB0ZXh0LWJsYWNrOwp9CgpidXR0b246ZGlzYWJsZWQgewogIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0K"},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Pagination.vue","sourceRoot":"src/components/Pagination","sourcesContent":["<template>\n  <ul class=\"pagination\">\n    <li class=\"pagination-item\">\n      <button type=\"button\" @click=\"onClickFirstPage\" :disabled=\"isInFirstPage\">\n        <chevrons-left-icon\n          size=\"1.5x\"\n          class=\"custom-class\"\n        ></chevrons-left-icon>\n      </button>\n    </li>\n\n    <li class=\"pagination-item\">\n      <button\n        type=\"button\"\n        @click=\"onClickPreviousPage\"\n        :disabled=\"isInFirstPage\"\n      >\n        <chevron-left-icon size=\"1.5x\" class=\"custom-class\"></chevron-left-icon>\n      </button>\n    </li>\n\n    <li v-for=\"(page, index) in pages\" class=\"pagination-item\" :key=\"index\">\n      <button\n        type=\"button\"\n        @click=\"onClickPage(page.name)\"\n        :disabled=\"page.isDisabled\"\n        :class=\"{ active: isPageActive(page.name) }\"\n      >\n        {{ page.name }}\n      </button>\n    </li>\n\n    <li class=\"pagination-item\">\n      <button type=\"button\" @click=\"onClickNextPage\" :disabled=\"isInLastPage\">\n        <chevron-right-icon\n          size=\"1.5x\"\n          class=\"custom-class\"\n        ></chevron-right-icon>\n      </button>\n    </li>\n\n    <li class=\"pagination-item\">\n      <button type=\"button\" @click=\"onClickLastPage\" :disabled=\"isInLastPage\">\n        <chevrons-right-icon\n          size=\"1.5x\"\n          class=\"custom-class\"\n        ></chevrons-right-icon>\n      </button>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  props: {\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3,\n    },\n    totalPages: {\n      type: Number,\n      required: true,\n    },\n    currentPage: {\n      type: Number,\n      required: true,\n    },\n  },\n  computed: {\n    isInFirstPage() {\n      return this.currentPage === 1;\n    },\n    isInLastPage() {\n      return this.currentPage === this.totalPages;\n    },\n    startPage() {\n      if (this.currentPage === 1) {\n        return 1;\n      }\n      if (\n        this.currentPage === this.totalPages &&\n        this.totalPages > this.maxVisibleButtons\n      ) {\n        return this.totalPages - this.maxVisibleButtons + 1;\n      }\n      return this.currentPage - 1;\n    },\n    endPage() {\n      return Math.min(\n        this.startPage + this.maxVisibleButtons - 1,\n        this.totalPages\n      );\n    },\n    pages() {\n      const range = [];\n      for (let i = this.startPage; i <= this.endPage; i += 1) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage,\n        });\n      }\n      return range;\n    },\n  },\n  methods: {\n    isPageActive(page) {\n      return this.currentPage === page;\n    },\n    onClickFirstPage() {\n      this.$emit(\"pagechanged\", 1);\n    },\n    onClickPreviousPage() {\n      this.$emit(\"pagechanged\", this.currentPage - 1);\n    },\n    onClickPage(page) {\n      this.$emit(\"pagechanged\", page);\n    },\n    onClickNextPage() {\n      this.$emit(\"pagechanged\", this.currentPage + 1);\n    },\n    onClickLastPage() {\n      this.$emit(\"pagechanged\", this.totalPages);\n    },\n  },\n};\n</script>\n\n<style>\n.pagination {\n  @apply list-none;\n}\n\n.pagination-item:not(:last-child) {\n  margin-right: 0.55rem;\n  @apply inline-block;\n}\n\n.pagination-item button {\n  @apply px-3 py-2 rounded text-black;\n}\n\n.pagination-item button:focus {\n  @apply outline-none border-none;\n}\n\n.active {\n  @apply bg-gray-400 text-black;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n}\n</style>\n"]}]}