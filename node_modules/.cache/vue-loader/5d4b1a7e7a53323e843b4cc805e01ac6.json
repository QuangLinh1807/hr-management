{"remainingRequest":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dlinh/Documents/hr-management/src/components/CardProfile/CardPesonalProfile.vue?vue&type=style&index=0&id=72a80777&lang=scss&scoped=true&","dependencies":[{"path":"/home/dlinh/Documents/hr-management/src/components/CardProfile/CardPesonalProfile.vue","mtime":1624240131087},{"path":"/home/dlinh/Documents/hr-management/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubXgtaWNvbi1jYWxlbmRhciB7CiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsKfQoudGl0LXBlcnNvbmFsIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjsKICBAYXBwbHkgZmxleCBpdGVtcy1jZW50ZXIgcC0xICBwbC0zIGRhcms6Ym9yZGVyLWRhcmstNTsKfQouZXJyb3IgewogIGJvcmRlci1jb2xvcjogI2VkNWQ1ZDsKICBib3JkZXItd2lkdGg6IDJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogI2VkNWQ1ZCwgJGFscGhhOiAwLjA4KTsKICBAYXBwbHkgcm91bmRlZC1tZDsKfQouZXJyb3I6OnBsYWNlaG9sZGVyIHsKICBjb2xvcjogI2VkNWQ1ZDsKfQoudGV4dC1lcnJvciB7CiAgY29sb3I6ICNlZDVkNWQ7Cn0KLmVycm9yRGF0ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VkNWQ1ZDsKfQouZXJyb3I6Zm9jdXMgewogIG91dGxpbmU6IG5vbmU7CiAgYm9yZGVyLWNvbG9yOiAjZWQ1ZDVkICFpbXBvcnRhbnQ7CiAgYm9yZGVyLXdpZHRoOiAycHg7CiAgb3V0bGluZS1vZmZzZXQ6IG5vbmUgIWltcG9ydGFudDsKICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7Cn0KLmNhcmQtcGVyc29uYWwtcHJvZmlsZSB7CiAgLy8gYm9yZGVyOiAxcHggc29saWQgI2NlY2VjZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmOGZjOwogIEBhcHBseSByb3VuZGVkIG92ZXJmbG93LWhpZGRlbiB3LTMvNSBoLWZ1bGwgbXItODsKfQoucGVyc29uYWwtaW5mbyB7CiAgQGFwcGx5IHBiLTggdy1mdWxsOwp9Ci5wZXJzb25hbC1pbnB1dCB7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDYwLCA2MCwgNjAsIDAuMjYpOwogIEBhcHBseSB3LTUvNjsKfQo="},{"version":3,"sources":["CardPesonalProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardPesonalProfile.vue","sourceRoot":"src/components/CardProfile","sourcesContent":["<template>\n  <div class=\"card-personal-profile\">\n    <ValidationObserver v-slot=\"{ handleSubmit }\" :setErrors=\"setErrors\">\n      <form @submit.prevent=\"handleSubmit(saveInfo)\">\n        <div class=\"intro-y personal-info\">\n          <div class=\"tit-personal\">\n            <h2 class=\"text-lg mr-auto font-bold\">Personal Profile</h2>\n            <div class=\"ml-auto flex items-center\">\n              <button\n                v-if=\"!isEditable\"\n                class=\"mr-2 focus:outline-none\"\n                type=\"submit\"\n              >\n                <SaveIcon class=\"text-blue-900\" />\n              </button>\n              <button\n                v-if=\"!isEditable\"\n                class=\"focus:outline-none\"\n                @click=\"closeSave\"\n              >\n                <XIcon class=\"text-red-700 focus:outline-none\" />\n              </button>\n              <EditIcon\n                v-if=\"isEditable\"\n                @click=\"toggleDisable\"\n                class=\"\n                  hover:text-primary-1\n                  text-blue-900\n                  focus:outline-none\n                  cursor-pointer\n                \"\n              />\n            </div>\n          </div>\n          <div\n            class=\"px-2 pt-4 w-full\"\n            v-for=\"item of listFields\"\n            :key=\"item.id\"\n          >\n            <div class=\"flex items-start flex-col sm:flex-row w-full\">\n              <div class=\"mr-5 w-3/12 pl-6\">\n                <div class=\"font-medium\">{{ item.label }}</div>\n              </div>\n              <ValidationProvider\n                v-if=\"!isEditable\"\n                :rules=\"item.rules\"\n                v-slot=\"{ errors }\"\n                class=\"w-full\"\n                :setErrors=\"['abc']\"\n                :name=\"item.name\"\n              >\n                <input\n                  class=\"personal-input form-control\"\n                  v-model.trim=\"item.value\"\n                  :name=\"item.name\"\n                  v-if=\"!isEditable && item.type === 'text'\"\n                  :class=\"[errors[0] ? 'error' : '']\"\n                />\n\n                <v-select\n                  v-if=\"!isEditable && item.type === 'select'\"\n                  :options=\"item.optionS\"\n                  v-model.trim=\"item.value\"\n                  class=\"w-5/6\"\n                  :class=\"{ error: errors[0] }\"\n                  :name=\"item.name\"\n                  :reduce=\"(option) => option.code\"\n                >\n                  <template #search=\"{ attributes, events }\" :name=\"item.name\">\n                    <input\n                      class=\"vs__search h-7\"\n                      v-bind=\"attributes\"\n                      v-on=\"events\"\n                      :name=\"item.name\"\n                    />\n                  </template>\n                </v-select>\n                <DatePicker\n                  v-if=\"!isEditable && item.type === 'date'\"\n                  v-model.trim=\"item.value\"\n                  format=\"DD/MM/YYYY\"\n                  value-type=\"DD/MM/YYYY\"\n                  :name=\"item.name\"\n                  class=\"w-5/6\"\n                  :disabled-date=\"disabledBeforeToday\"\n                  input-class=\"form-control\"\n                  :class=\"{ error: errors[0] }\"\n                ></DatePicker>\n                <div v-if=\"!isEditable\" class=\"h-2 mt-1 text-error\">\n                  {{ errors[0] }}\n                </div>\n              </ValidationProvider>\n              <div\n                v-if=\"isEditable\"\n                class=\"break-words w-2/4 h-auto flex items-center\"\n              >\n                {{ getValueShowInSreen(item) }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </ValidationObserver>\n  </div>\n</template>\n<script>\nimport DatePicker from \"vue2-datepicker\";\nimport api from \"@/api/api\";\nimport { mapGetters, mapMutations } from \"vuex\";\nexport default {\n  components: {\n    DatePicker,\n  },\n  props: {\n    departmentList: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      setErrors: {\n        required: [\"qwer\", \"The email field must be a valid email\"],\n        name: [\"The name field is required\"],\n        age: [\"The age field must be a valid number\"],\n      },\n      accId: null,\n      isEditable: true,\n      listFields: [\n        {\n          id: 1,\n          name: \"fullname\",\n          label: \"Full Name\",\n          value: \"\",\n          type: \"text\",\n          rules: \"required|min:4|max:255\",\n        },\n        {\n          id: 2,\n          label: \"Gender\",\n          name: \"gender\",\n          value: \"\",\n          type: \"select\",\n          select: [],\n          optionS: [],\n          rules: \"required\",\n        },\n        {\n          id: 3,\n          label: \"Birthday\",\n          name: \"birthday\",\n          value: \"\",\n          type: \"date\",\n          rules: \"required\",\n        },\n        {\n          id: 4,\n          label: \"Position\",\n          name: \"positionId\",\n          value: \"\",\n          type: \"select\",\n          select: [],\n          optionS: [],\n          rules: \"required\",\n        },\n        {\n          id: 5,\n          label: \"Team\",\n          name: \"departmentId\",\n          value: \"\",\n          type: \"select\",\n          select: [],\n          optionS: [],\n          rules: \"required\",\n        },\n        {\n          id: 6,\n          label: \"Phone Number\",\n          name: \"phone\",\n          value: \"\",\n          type: \"text\",\n          rules: \"required|numeric|min:5|max:20\",\n        },\n        {\n          id: 7,\n          label: \"Address\",\n          name: \"address\",\n          value: \"\",\n          type: \"text\",\n          rules: \"required|min:1|max:255\",\n        },\n        // {\n        //   id: 8,\n        //   label: \"Email\",\n        //   name: \"email\",\n        //   value: \"\",\n        //   type: \"text\",\n        //   rules: \"required|email|min:4|max:255\",\n        // },\n      ],\n      formGroup: [],\n      optionGender: [\n        {\n          code: 0,\n          label: \"Male\",\n        },\n        {\n          code: 1,\n          label: \"Female\",\n        },\n        {\n          code: 2,\n          label: \"Other\",\n        },\n      ],\n      optionPosition: [],\n      optionDepartment: [],\n    };\n  },\n  watch: {\n    getPersonalProfile: {\n      handler: function (val) {\n        if (val) {\n          this.bindingListFields();\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n    getPositionUser: {\n      handler: function (val) {\n        if (val) {\n          this.optionPosition = this.getPositionUser.map((item) => ({\n            label: item.name,\n            code: item.id,\n          }));\n        }\n      },\n      immediate: true,\n    },\n    departmentList: {\n      handler: function (val) {\n        if (val) {\n          this.optionDepartment = this.departmentList.map((item) => ({\n            label: item.name,\n            code: item.id,\n          }));\n        }\n      },\n      immediate: true,\n    },\n    $route: {\n      handler: async function (to) {\n        this.accId = to.params.id;\n      },\n      immediate: true,\n    },\n    flagChange(newValue) {\n      if (newValue === true) {\n        this.bindingListFields();\n        this.$store.commit(\"SET_FLAG_CHANGE\", false);\n      }\n    },\n  },\n  async created() {\n    await this.$store.dispatch(\"overview/getPositionFromApi\");\n  },\n  computed: {\n    ...mapGetters(\"overview\", [\"getPersonalProfile\"]),\n    ...mapGetters(\"overview\", [\"getPositionUser\"]),\n  },\n  methods: {\n    ...mapMutations(\"loading\", [\"SET_LOADING\"]),\n    toggleDisable() {\n      this.isEditable = false;\n    },\n    saveInfo() {\n      this.isEditable = true;\n      this.listFields.forEach(\n        (item) => (this.formGroup[item.name] = item.value)\n      );\n      this.putDataFromApi();\n    },\n    closeSave() {\n      this.isEditable = true;\n      this.bindingListFields();\n    },\n    formatDate() {\n      return this.formGroup.birthday;\n    },\n    bindingListFields() {\n      this.formGroup = {\n        ...this.getPersonalProfile,\n      };\n      this.listFields = this.listFields.map((item) => ({\n        ...item,\n        value: this.formGroup[item.name],\n      }));\n    },\n    getValueShowInSreen(item) {\n      if (item.name === \"positionId\") {\n        item.optionS = this.optionPosition;\n        return (\n          this.optionPosition.length > 0 &&\n          this.optionPosition?.find((position) => position.code === item.value)\n            ?.label\n        );\n      }\n      if (item.name === \"departmentId\") {\n        item.optionS = this.optionDepartment;\n        return (\n          this.optionDepartment.length > 0 &&\n          this.optionDepartment?.find(\n            (department) => department.code === item.value\n          )?.label\n        );\n      }\n      if (item.name === \"gender\") {\n        item.optionS = this.optionGender;\n        const resultGender =\n          this.optionGender.length > 0 &&\n          this.optionGender?.find((gender) => gender.code === item.value);\n        return resultGender ? resultGender.label : \"\";\n      }\n      if (item.type === \"date\") {\n        return this.formatDate();\n      }\n      return item.value;\n    },\n    async putDataFromApi() {\n      this.SET_LOADING(true);\n      try {\n        const res = await api(\"putUserProfileApi\", {\n          data: {\n            address: this.formGroup.address,\n            birthday: this.formGroup.birthday,\n            gender: this.formGroup.gender,\n            email: this.formGroup.email,\n            fullname: this.formGroup.fullname,\n            phone: this.formGroup.phone,\n            departmentId: this.formGroup.departmentId,\n            positionId: this.formGroup.positionId,\n          },\n          accountId: this.accId,\n        });\n        if (res.success) {\n          this.SET_LOADING(false);\n          await this.$store.dispatch(\"overview/getPersonalFromApi\", {\n            accountId: this.accId,\n          });\n          this.$notify({\n            group: \"foo\",\n            title: \"success\",\n            text: \"Successfully save Personal Profile\",\n            type: \"success\",\n          });\n          this.isEditable = true;\n        } else {\n          this.isEditable = false;\n          throw new Error(res.data.response.data.errors[0].message);\n        }\n      } catch (err) {\n        this.$notify({\n          group: \"err\",\n          title: \"Error\",\n          text: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    disabledBeforeToday(date) {\n      return date > new Date();\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.mx-icon-calendar {\n  display: block !important;\n}\n.tit-personal {\n  border-bottom: 1px solid #fff;\n  @apply flex items-center p-1  pl-3 dark:border-dark-5;\n}\n.error {\n  border-color: #ed5d5d;\n  border-width: 2px;\n  background-color: rgba($color: #ed5d5d, $alpha: 0.08);\n  @apply rounded-md;\n}\n.error::placeholder {\n  color: #ed5d5d;\n}\n.text-error {\n  color: #ed5d5d;\n}\n.errorDate {\n  background-color: #ed5d5d;\n}\n.error:focus {\n  outline: none;\n  border-color: #ed5d5d !important;\n  border-width: 2px;\n  outline-offset: none !important;\n  box-shadow: none !important;\n}\n.card-personal-profile {\n  // border: 1px solid #cecece;\n  background-color: #f2f8fc;\n  @apply rounded overflow-hidden w-3/5 h-full mr-8;\n}\n.personal-info {\n  @apply pb-8 w-full;\n}\n.personal-input {\n  border-color: rgba(60, 60, 60, 0.26);\n  @apply w-5/6;\n}\n</style>\n<style lang=\"scss\">\n.vs__dropdown-toggle {\n  background-color: white !important;\n}\n</style>\n"]}]}