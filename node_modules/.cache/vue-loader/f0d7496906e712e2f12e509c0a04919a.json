{"remainingRequest":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dlinh/Documents/hr-management/src/components/TopBar/TopBar.vue?vue&type=template&id=45f63062&scoped=true&","dependencies":[{"path":"/home/dlinh/Documents/hr-management/src/components/TopBar/TopBar.vue","mtime":1624240131091},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}