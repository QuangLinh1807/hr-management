{"remainingRequest":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dlinh/Documents/hr-management/src/components/CardSkill/RowDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dlinh/Documents/hr-management/src/components/CardSkill/RowDetail.vue","mtime":1624240131087},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dlinh/Documents/hr-management/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dlinh/Documents/hr-management/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBPcHRpb25MZXZlbCBmcm9tICIuLi9DYXJkU2tpbGwvT3B0aW9uTGV2ZWwudnVlIjsKaW1wb3J0IGxpc3RMZXZlbCBmcm9tICIuLi8uLi9jb25zdGFudHMvbGlzdExldmVsIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBPcHRpb25MZXZlbCwKICB9LAogIHByb3BzOiB7CiAgICByb3dEYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgeWVhcjogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICBsZXZlbDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICBvcmRlcjogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdExldmVsOiBsaXN0TGV2ZWwsCiAgICAgIHNlbGVjdDogdGhpcy5sZXZlbCwKICAgICAgZXhwOiB0aGlzLnllYXIsCiAgICAgIGlzT3ZlcmxheTogZmFsc2UsCiAgICAgIG1vdXNlWDogbnVsbCwKICAgICAgbW91c2VZOiBudWxsLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZU92ZXJsYXkoKSB7CiAgICAgIGxldCB4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5nZXRJZFNlbGVjdCk7CiAgICAgIHRoaXMuaXNPdmVybGF5ID0gIXRoaXMuaXNPdmVybGF5OwogICAgICB0aGlzLm1vdXNlWCA9IHRoaXMuZ2V0T2Zmc2V0TGVmdCh4KSAtIDI1OwogICAgICBpZiAodGhpcy5vcmRlciA8PSAyKSB7CiAgICAgICAgdGhpcy5tb3VzZVkgPSB0aGlzLmdldE9mZnNldFRvcCh4KSArIHguY2xpZW50SGVpZ2h0IC0gMTA2OwogICAgICB9CiAgICAgIGlmICh0aGlzLm9yZGVyID4gMikgewogICAgICAgIHRoaXMubW91c2VZID0KICAgICAgICAgIHRoaXMuZ2V0T2Zmc2V0VG9wKHgpICsgeC5jbGllbnRIZWlnaHQgLSAxMDYgLSAodGhpcy5vcmRlciAtIDIpICogMzc7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RlZExldmVsKHZhbHVlKSB7CiAgICAgIHRoaXMuc2VsZWN0ID0gdmFsdWU7CiAgICAgIHRoaXMuaXNPdmVybGF5ID0gZmFsc2U7CiAgICB9LAogICAgZ2V0T2Zmc2V0TGVmdChlbGVtKSB7CiAgICAgIGxldCBvZmZzZXRMZWZ0ID0gMDsKICAgICAgZG8gewogICAgICAgIGlmICghaXNOYU4oZWxlbS5vZmZzZXRMZWZ0KSkgewogICAgICAgICAgb2Zmc2V0TGVmdCArPSBlbGVtLm9mZnNldExlZnQ7CiAgICAgICAgfQogICAgICB9IHdoaWxlICgoZWxlbSA9IGVsZW0ub2Zmc2V0UGFyZW50KSk7CiAgICAgIHJldHVybiBvZmZzZXRMZWZ0OwogICAgfSwKICAgIGdldE9mZnNldFRvcChlbGVtKSB7CiAgICAgIGxldCBvZmZzZXRUb3AgPSAwOwogICAgICBkbyB7CiAgICAgICAgaWYgKCFpc05hTihlbGVtLm9mZnNldFRvcCkpIHsKICAgICAgICAgIG9mZnNldFRvcCArPSBlbGVtLm9mZnNldFRvcDsKICAgICAgICB9CiAgICAgIH0gd2hpbGUgKChlbGVtID0gZWxlbS5vZmZzZXRQYXJlbnQpKTsKICAgICAgcmV0dXJuIG9mZnNldFRvcDsKICAgIH0sCiAgICBvbkNoYW5nZShlKSB7CiAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IGUudGFyZ2V0OwogICAgICBpZiAodmFsdWUgPT09ICItIikgewogICAgICAgIHRoaXMuZXhwID0gIi0iOwogICAgICB9IGVsc2UgaWYgKCt2YWx1ZSA+PSAxKSB7CiAgICAgICAgdGhpcy5leHAgPSArdmFsdWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5leHAgPSBudWxsOwogICAgICB9CiAgICB9LAogICAgb25seUZvckN1cnJlbmN5KCRldmVudCkgewogICAgICBsZXQgcGF0dGVybiA9IC8oKC0pfCheXGQrXC57MCwxfVxkezAsMH0kKSkvOwogICAgICBpZiAoIXBhdHRlcm4udGVzdCh0aGlzLmdldFZhbHVlSW5wdXQpKSB7CiAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIH0KICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0UG9zaXRpb24oKSB7CiAgICAgIHJldHVybiB7IHRvcDogdGhpcy5tb3VzZVkgKyAicHgiLCBsZWZ0OiB0aGlzLm1vdXNlWCArICJweCIgfTsKICAgIH0sCiAgICBnZXRJZFNlbGVjdCgpIHsKICAgICAgcmV0dXJuIGBsZXZlbC0ke3RoaXMucm93RGF0YS5pZH0tJHtNYXRoLnJhbmRvbSgpfWA7CiAgICB9LAogICAgZ2V0VmFsdWVJbnB1dCgpIHsKICAgICAgcmV0dXJuIHRoaXMueWVhciA9PT0gbnVsbCA/ICItIiA6IHRoaXMueWVhcjsKICAgIH0sCiAgICBnZXRTdHlsZVNlbGVjdCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0b3A6IHRoaXMubW91c2VZIC0gNDAwICsgInB4IiwKICAgICAgICBsZWZ0OiAwICsgInB4IiwKICAgICAgfTsKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgc2VsZWN0KHZhbHVlKSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy5yb3dEYXRhLmxpc3RFbXBsb3llZVNraWxsc1swXS5pZDsKICAgICAgY29uc3QgeWVhciA9IHRoaXMueWVhciA9PT0gIi0iID8gbnVsbCA6IHRoaXMueWVhcjsKICAgICAgY29uc3QgbGV2ZWwgPSB2YWx1ZSA9PT0gIm51bGwiIHx8IHZhbHVlID09PSBudWxsID8gbnVsbCA6ICt2YWx1ZTsKICAgICAgdGhpcy4kZW1pdCgiZWRpdC1kZXRhaWwiLCB7CiAgICAgICAgaWQ6IHRoaXMucm93RGF0YS5pZCwKICAgICAgICBsaXN0RW1wbG95ZWVTa2lsbHM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICB5ZWFyOiB5ZWFyLAogICAgICAgICAgICBsZXZlbDogbGV2ZWwsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH0pOwogICAgfSwKICAgIGV4cCh2YWx1ZSkgewogICAgICBjb25zdCBpZCA9IHRoaXMucm93RGF0YS5saXN0RW1wbG95ZWVTa2lsbHNbMF0uaWQ7CiAgICAgIGNvbnN0IHllYXIgPSB2YWx1ZSA9PT0gIi0iIHx8IHZhbHVlID09PSBudWxsID8gbnVsbCA6IHZhbHVlOwogICAgICBjb25zdCBsZXZlbCA9CiAgICAgICAgdGhpcy5sZXZlbCA9PT0gIm51bGwiIHx8IHRoaXMubGV2ZWwgPT09IG51bGwgPyBudWxsIDogK3RoaXMubGV2ZWw7CiAgICAgIHRoaXMuJGVtaXQoImVkaXQtZGV0YWlsIiwgewogICAgICAgIGlkOiB0aGlzLnJvd0RhdGEuaWQsCiAgICAgICAgbGlzdEVtcGxveWVlU2tpbGxzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgeWVhcjogeWVhciwKICAgICAgICAgICAgbGV2ZWw6IGxldmVsLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["RowDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"RowDetail.vue","sourceRoot":"src/components/CardSkill","sourcesContent":["<template>\n  <div class=\"title-row\">\n    <div class=\"text-name-skill\">\n      <span v-tooltip.bottom=\"rowData.name\">{{ rowData.name }}</span>\n    </div>\n    <div>\n      <input\n        type=\"text\"\n        name=\"exp\"\n        :value=\"getValueInput\"\n        @input=\"onChange\"\n        @keypress=\"onlyForCurrency\"\n        autocomplete=\"off\"\n      />\n    </div>\n    <div>\n      <div\n        class=\"overlay\"\n        v-if=\"isOverlay\"\n        @click=\"isOverlay = false\"\n        :style=\"getStyleSelect\"\n      ></div>\n      <ul :id=\"getIdSelect\">\n        <li class=\"cursor-pointer ml-3\" @click=\"toggleOverlay\">\n          <span class=\"level\" :class=\"listLevel[level].classLevel\">{{\n            listLevel[level].label\n          }}</span>\n          <chevron-down-icon\n            size=\"1.3x\"\n            class=\"custom-class\"\n          ></chevron-down-icon>\n        </li>\n        <li>\n          <ul class=\"select-level\" :style=\"getPosition\" v-if=\"isOverlay\">\n            <option-level\n              v-for=\"(value, level) in listLevel\"\n              :key=\"level\"\n              :selectedLevel=\"selectedLevel\"\n              :levelData=\"value\"\n              :level=\"level\"\n              v-show=\"level != select\"\n            >\n            </option-level>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n//\n<script>\nimport OptionLevel from \"../CardSkill/OptionLevel.vue\";\nimport listLevel from \"../../constants/listLevel\";\n\nexport default {\n  components: {\n    OptionLevel,\n  },\n  props: {\n    rowData: {\n      type: Object,\n      required: true,\n    },\n    year: {\n      required: true,\n    },\n    level: {\n      required: true,\n    },\n    order: {\n      required: true,\n    },\n  },\n  data() {\n    return {\n      listLevel: listLevel,\n      select: this.level,\n      exp: this.year,\n      isOverlay: false,\n      mouseX: null,\n      mouseY: null,\n    };\n  },\n  methods: {\n    toggleOverlay() {\n      let x = document.getElementById(this.getIdSelect);\n      this.isOverlay = !this.isOverlay;\n      this.mouseX = this.getOffsetLeft(x) - 25;\n      if (this.order <= 2) {\n        this.mouseY = this.getOffsetTop(x) + x.clientHeight - 106;\n      }\n      if (this.order > 2) {\n        this.mouseY =\n          this.getOffsetTop(x) + x.clientHeight - 106 - (this.order - 2) * 37;\n      }\n    },\n    selectedLevel(value) {\n      this.select = value;\n      this.isOverlay = false;\n    },\n    getOffsetLeft(elem) {\n      let offsetLeft = 0;\n      do {\n        if (!isNaN(elem.offsetLeft)) {\n          offsetLeft += elem.offsetLeft;\n        }\n      } while ((elem = elem.offsetParent));\n      return offsetLeft;\n    },\n    getOffsetTop(elem) {\n      let offsetTop = 0;\n      do {\n        if (!isNaN(elem.offsetTop)) {\n          offsetTop += elem.offsetTop;\n        }\n      } while ((elem = elem.offsetParent));\n      return offsetTop;\n    },\n    onChange(e) {\n      const { value } = e.target;\n      if (value === \"-\") {\n        this.exp = \"-\";\n      } else if (+value >= 1) {\n        this.exp = +value;\n      } else {\n        this.exp = null;\n      }\n    },\n    onlyForCurrency($event) {\n      let pattern = /((-)|(^\\d+\\.{0,1}\\d{0,0}$))/;\n      if (!pattern.test(this.getValueInput)) {\n        $event.preventDefault();\n      }\n    },\n  },\n  computed: {\n    getPosition() {\n      return { top: this.mouseY + \"px\", left: this.mouseX + \"px\" };\n    },\n    getIdSelect() {\n      return `level-${this.rowData.id}-${Math.random()}`;\n    },\n    getValueInput() {\n      return this.year === null ? \"-\" : this.year;\n    },\n    getStyleSelect() {\n      return {\n        top: this.mouseY - 400 + \"px\",\n        left: 0 + \"px\",\n      };\n    },\n  },\n  watch: {\n    select(value) {\n      const id = this.rowData.listEmployeeSkills[0].id;\n      const year = this.year === \"-\" ? null : this.year;\n      const level = value === \"null\" || value === null ? null : +value;\n      this.$emit(\"edit-detail\", {\n        id: this.rowData.id,\n        listEmployeeSkills: [\n          {\n            id: id,\n            year: year,\n            level: level,\n          },\n        ],\n      });\n    },\n    exp(value) {\n      const id = this.rowData.listEmployeeSkills[0].id;\n      const year = value === \"-\" || value === null ? null : value;\n      const level =\n        this.level === \"null\" || this.level === null ? null : +this.level;\n      this.$emit(\"edit-detail\", {\n        id: this.rowData.id,\n        listEmployeeSkills: [\n          {\n            id: id,\n            year: year,\n            level: level,\n          },\n        ],\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.title-row {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: 0.5rem;\n  border-color: #dcdcdc;\n  @apply w-full py-2 text-center border-b items-center p-2 justify-between;\n}\n\n.text-name-skill {\n  @apply text-left w-full truncate w-10;\n}\n\n.level {\n  width: 1.5rem;\n  height: 1.5rem;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n  border-radius: 6px;\n  @apply font-bold p-1;\n}\n\n.overlay {\n  width: 100vw;\n  height: 200vh;\n  min-width: 100vw;\n  min-height: 200vh;\n  z-index: 49;\n  position: fixed;\n}\n\ninput[type=\"number\"],\ninput[type=\"text\"] {\n  -moz-appearance: none;\n  @apply inline-block w-6 h-auto ml-4 bg-gray-300 text-center rounded-sm font-bold;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.select-level {\n  box-shadow: 0px 1px 6px 0 #2e2e2e;\n  @apply fixed rounded-sm mt-1 shadow-2xl z-50;\n}\n\n.not-border {\n  @apply p-2 justify-between;\n}\n\n.type-s {\n  --primary-color: #0079c4;\n  background-color: rgba($color: #0079c4, $alpha: 0.2);\n}\n.type-a {\n  --primary-color: #812991;\n  background-color: rgba($color: #812991, $alpha: 0.2);\n}\n.type-b {\n  --primary-color: #45d1d1;\n  background-color: rgba($color: #45d1d1, $alpha: 0.2);\n}\n.type-c {\n  --primary-color: #f9826c;\n  background-color: rgba($color: #f9826c, $alpha: 0.2);\n}\n.type-d {\n  --primary-color: #003993;\n  background-color: rgba($color: #003993, $alpha: 0.2);\n}\n.type-null {\n  --primary-color: #099b1c;\n  background-color: rgba($color: #099b1c, $alpha: 0.2);\n}\n</style>\n"]}]}